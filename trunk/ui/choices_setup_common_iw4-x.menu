// ==========================================================
// IW4M menu Project
// 
// Component: m2demo
// Sub-component: ui_mp
// Purpose: Recoding "choices_setup_common.menu" also
//          testing button align for "type_buttons" and
//          using easier method but requires alot of work.
//
// Initial author: reaaL
// Started: 2013-04-28
// ==========================================================
#define CHOICE_Y_COUNT 20

#define CHOICE_Y_SPACING 20
#define CHOICE_X_SPACING 250

#define CHOICE_Y_START 82
#define CHOICE_X_START 58
#define CHOICE_SIZE_Y 22
#define CHOICE_SIZE_X 150

#define CHOICE_TEXT_OFFSET_X 22

#define MENU_BUTTON "menu_button_selection_bar"
#define MENU_BUTTON_TYPE "white"


#if !defined( CHOICE_SEP_1 ) || !defined( CHOICE_SEP_SPACING )
#define CHOICE_SEP_TOTAL_SPACING( itemIndex )	0
#elif !defined( CHOICE_SEP_2 )
#define CHOICE_SEP_TOTAL_SPACING( itemIndex )	((itemIndex <= CHOICE_SEP_1) ? 0 : CHOICE_SEP_SPACING )
#elif !defined( CHOICE_SEP_3 )
#define CHOICE_SEP_TOTAL_SPACING( itemIndex )	((itemIndex <= CHOICE_SEP_1) ? 0 : ( (itemIndex <= CHOICE_SEP_2) ? CHOICE_SEP_SPACING : CHOICE_SEP_SPACING * 2 ) )
#else
#define CHOICE_SEP_TOTAL_SPACING( itemIndex )	((itemIndex <= CHOICE_SEP_1) ? 0 : ( (itemIndex <= CHOICE_SEP_2) ? CHOICE_SEP_SPACING : ( (itemIndex <= CHOICE_SEP_3) ? CHOICE_SEP_SPACING * 2 : CHOICE_SEP_SPACING * 3) ) )
#endif

#define CHOICE_ROW( itemIndex )		((itemIndex - 1) % CHOICE_Y_COUNT)
#define CHOICE_COL( itemIndex )		((itemIndex - 1 - ((itemIndex - 1) % CHOICE_Y_COUNT)) / CHOICE_Y_COUNT)

#define CHOICE_X( itemIndex ) 		(CHOICE_X_START + CHOICE_X_SPACING * CHOICE_COL( itemIndex ))
#define CHOICE_Y( itemIndex ) 		(CHOICE_Y_START + CHOICE_Y_SPACING * CHOICE_ROW( itemIndex ) + CHOICE_SEP_TOTAL_SPACING( itemIndex ))
#define CHOICE_ORIGIN( itemIndex )	CHOICE_X( itemIndex ) CHOICE_Y( itemIndex )
#define CHOICE_RECT( itemIndex )	CHOICE_ORIGIN( itemIndex ) CHOICE_SIZE_X CHOICE_SIZE_Y 1 1

#define TEST_BUTTON( itemIndex, textArg, actionArg ) \
		TEST_BUTTON_VIS( itemIndex, textArg, actionArg, 1 )

#define TEST_BUTTON_VIS( itemIndex, textArg, actionArg, visArg ) \
		itemDef \
		{ \
			type ITEM_TYPE_BUTTON \
			rect CHOICE_RECT( itemIndex ) \
			exp text( textArg ); \
			style 1 \
			background MENU_BUTTON_TYPE \
			group mw2_button \
			textFont 3 \
			textScale 0.375 \
			textStyle 0 \
			textAlign 6 \
			textAlignX -60 \
			forecolor 1 1 1 1 \
			visible visArg \
			onFocus \
			{ \
				play "mouse_over"; \
				setItemColor self backcolor 0 0 0 1; \
				setLocalVarBool ui_menuAButton ( 1 ); \
				setLocalVarFloat ui_popupYPos 0.000000; \
			} \
			leaveFocus \
			{ \
				setItemColor self backcolor 0 0 0 0.0; \
				setLocalVarBool ui_menuAButton ( 0 ); \
			} \
			action \
			{ \
				play "mouse_click"; \
				actionArg \
			} \
		}